Recap:
1. Python flask fullstack application

Steps :

1. clone git and download files under flaskfullstack folder
https://github.com/raghuprasadks/awsnhjune2024/tree/main/flaskfullstack

2. create flaskfullstack folder
3. copy app.py and html files under the templates folder as it is
4. Create and activate virtual environment
python -m venv venv
./venv/Scripts/activate
5. install flask
pip install flask
6. python app.py


Agenda:
1. Lambda functions - Serverless deployment
a. Login to aws
b. search for lambda service
c. click on create function - 
d. Select Author from scratch
e. name of the function welcomeusinglambda
f. select python as runtime
g. Replace existing code with 

import json

def welcome():
    return "welcome to serverless deployment"
def lambda_handler(event, context):
    # TODO implement
    msg = welcome()
    return {
        'statusCode': 200,
        'body': json.dumps(msg)
    }

h.deploy and test
j. add trigger - API Gateway
New gateway
security - open

i. api end points
https://iomuo21idl.execute-api.ap-south-1.amazonaws.com/default/welcomeusinglambda
2. Kubernetes  - K8
AWS CLI - Command Line Interface
3. ECR - Elastic Container Registry
4. EKS - Elastic Kubernetes Service
5. I AM - User and Role management
6. Feedback N MCQ Test

Recap :

Git
1. downloaded git
2. sign up - GitHub.com
3. git commands
git init
git add <file name>
git add .
git commit -m "message"

create a repo GitHub.com
flaskapp
git branch -M main
git remote add repository <git url>
git push -u origin main

created a GitHub -- some.git

git clone <something.git>
git pull
git branch
git checkout
git merge

sample website - liveserver
GitHub - pages
githubactions
CI-CD

cloud basics
deployment model - public,private,hybrid
service models - 
IAAS
PAAS
SAAS

Python flask
virtual environment
python -m venv venv
./venv/Scripts/activate
pip install <files>
requirements.txt

API - Webservices
database
pymysql
frontend
fullstack
EC2
docker
dockerhub
docker images
docker container
docker build -t flaskapp .
Dockerfile
Dockerhub
tag as per your docker profile
docker push raghuprasadkonandur/flaskapp
nginx
ec2  - 
GitHub - docker pull

RDS -
MySQL workbench
end point,userid,password
port

user,permission
Kubernetes
kubectl
eksctl








